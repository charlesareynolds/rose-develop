=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480a0: je     0x080480a3<case1>
Symbolic@0x1320270: startInstruction(0x080480a0: je     0x080480a3<case1>)
Symbolic@0x1320270 insn@0x080480a0[0]: number_(32, 134512800) = {defs={0x080480a0}, expr=0x080480a0<134512800>[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: number_(32, 2) = {defs={0x080480a0}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: add({defs={0x080480a0}, expr=0x080480a0<134512800>[32]}, {defs={0x080480a0}, expr=0x00000002[32]}) = {defs={0x080480a0}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: writeRegister(eip, {defs={0x080480a0}, expr=0x080480a2<134512802>[32]})
Symbolic@0x1320270 insn@0x080480a0[0]: undefined_(1) = v4065[1]
Symbolic@0x1320270 insn@0x080480a0[0]: readRegister(zf, v4065[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480a0[0]: undefined_(32) = v4066[32]
Symbolic@0x1320270 insn@0x080480a0[0]: readRegister(eip, v4066[32]) = {defs={0x080480a0}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: number_(32, 134512803) = {defs={0x080480a0}, expr=0x080480a3<134512803>[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: unsignedExtend({defs={0x080480a0}, expr=0x080480a3<134512803>[32]}, 32) = {defs={0x080480a0}, expr=0x080480a3<134512803>[32]}
Symbolic@0x1320270 insn@0x080480a0[0]: ite(zf_0[1], {defs={0x080480a0}, expr=0x080480a3<134512803>[32]}, {defs={0x080480a0}, expr=0x080480a2<134512802>[32]}) = {defs={0x080480a0}, expr=(ite[32] zf_0[1] 0x080480a3<134512803>[32] 0x080480a2<134512802>[32])}
Symbolic@0x1320270 insn@0x080480a0[0]: writeRegister(eip, {defs={0x080480a0}, expr=(ite[32] zf_0[1] 0x080480a3<134512803>[32] 0x080480a2<134512802>[32])})
Symbolic@0x1320270 insn@0x080480a0[0]: finishInstruction(je     0x080480a3<case1>)
registers:
  eip          [writer=0x080480a0] = {defs={0x080480a0}, expr=(ite[32] zf_0[1] 0x080480a3<134512803>[32] 0x080480a2<134512802>[32])}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480a2: hlt    
Symbolic@0x1320270: startInstruction(0x080480a2: hlt)
Symbolic@0x1320270 insn@0x080480a2[0]: number_(32, 134512802) = {defs={0x080480a2}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a2[0]: number_(32, 1) = {defs={0x080480a2}, expr=0x00000001[32]}
Symbolic@0x1320270 insn@0x080480a2[0]: add({defs={0x080480a2}, expr=0x080480a2<134512802>[32]}, {defs={0x080480a2}, expr=0x00000001[32]}) = {defs={0x080480a2}, expr=0x080480a3<134512803>[32]}
Symbolic@0x1320270 insn@0x080480a2[0]: writeRegister(eip, {defs={0x080480a2}, expr=0x080480a3<134512803>[32]})
Symbolic@0x1320270 insn@0x080480a2[0]: hlt()
Symbolic@0x1320270 insn@0x080480a2[0]: number_(32, 134512802) = {defs={0x080480a2}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a2[0]: writeRegister(eip, {defs={0x080480a2}, expr=0x080480a2<134512802>[32]})
Symbolic@0x1320270 insn@0x080480a2[0]: finishInstruction(hlt)
registers:
  eip          [writer=0x080480a2] write-only = {defs={0x080480a2}, expr=0x080480a2<134512802>[32]}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480a3: mov    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480a3: mov    eax, ebx)
Symbolic@0x1320270 insn@0x080480a3[0]: number_(32, 134512803) = {defs={0x080480a3}, expr=0x080480a3<134512803>[32]}
Symbolic@0x1320270 insn@0x080480a3[0]: number_(32, 2) = {defs={0x080480a3}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480a3[0]: add({defs={0x080480a3}, expr=0x080480a3<134512803>[32]}, {defs={0x080480a3}, expr=0x00000002[32]}) = {defs={0x080480a3}, expr=0x080480a5<134512805>[32]}
Symbolic@0x1320270 insn@0x080480a3[0]: writeRegister(eip, {defs={0x080480a3}, expr=0x080480a5<134512805>[32]})
Symbolic@0x1320270 insn@0x080480a3[0]: undefined_(32) = v5048[32]
Symbolic@0x1320270 insn@0x080480a3[0]: readRegister(ebx, v5048[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480a3[0]: writeRegister(eax, ebx_0[32])
Symbolic@0x1320270 insn@0x080480a3[0]: finishInstruction(mov    eax, ebx)
registers:
  eax          [writer=0x080480a3] write-only = ebx_0[32]
  eip          [writer=0x080480a3] write-only = {defs={0x080480a3}, expr=0x080480a5<134512805>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480a5: mov    eax, eax
Symbolic@0x1320270: startInstruction(0x080480a5: mov    eax, eax)
Symbolic@0x1320270 insn@0x080480a5[1]: number_(32, 134512805) = {defs={0x080480a5}, expr=0x080480a5<134512805>[32]}
Symbolic@0x1320270 insn@0x080480a5[1]: number_(32, 2) = {defs={0x080480a5}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480a5[1]: add({defs={0x080480a5}, expr=0x080480a5<134512805>[32]}, {defs={0x080480a5}, expr=0x00000002[32]}) = {defs={0x080480a5}, expr=0x080480a7<134512807>[32]}
Symbolic@0x1320270 insn@0x080480a5[1]: writeRegister(eip, {defs={0x080480a5}, expr=0x080480a7<134512807>[32]})
Symbolic@0x1320270 insn@0x080480a5[1]: undefined_(32) = v5053[32]
Symbolic@0x1320270 insn@0x080480a5[1]: readRegister(eax, v5053[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480a5[1]: writeRegister(eax, ebx_0[32])
Symbolic@0x1320270 insn@0x080480a5[1]: finishInstruction(mov    eax, eax)
registers:
  eax          [writer=0x080480a5] = ebx_0[32]
  eip          [writer=0x080480a5] write-only = {defs={0x080480a5}, expr=0x080480a7<134512807>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480a7: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480a7: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480a7[2]: number_(32, 134512807) = {defs={0x080480a7}, expr=0x080480a7<134512807>[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: number_(32, 2) = {defs={0x080480a7}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: add({defs={0x080480a7}, expr=0x080480a7<134512807>[32]}, {defs={0x080480a7}, expr=0x00000002[32]}) = {defs={0x080480a7}, expr=0x080480a9<134512809>[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: writeRegister(eip, {defs={0x080480a7}, expr=0x080480a9<134512809>[32]})
Symbolic@0x1320270 insn@0x080480a7[2]: undefined_(1) = v5060[1]
Symbolic@0x1320270 insn@0x080480a7[2]: readRegister(zf, v5060[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480a7[2]: undefined_(32) = v5061[32]
Symbolic@0x1320270 insn@0x080480a7[2]: readRegister(eip, v5061[32]) = {defs={0x080480a7}, expr=0x080480a9<134512809>[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: number_(32, 134512802) = {defs={0x080480a7}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: unsignedExtend({defs={0x080480a7}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480a7}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480a7[2]: ite(zf_0[1], {defs={0x080480a7}, expr=0x080480a2<134512802>[32]}, {defs={0x080480a7}, expr=0x080480a9<134512809>[32]}) = {defs={0x080480a7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480a9<134512809>[32])}
Symbolic@0x1320270 insn@0x080480a7[2]: writeRegister(eip, {defs={0x080480a7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480a9<134512809>[32])})
Symbolic@0x1320270 insn@0x080480a7[2]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480a5] = ebx_0[32]
  eip          [writer=0x080480a7] = {defs={0x080480a7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480a9<134512809>[32])}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480a9: add    eax, eax
Symbolic@0x1320270: startInstruction(0x080480a9: add    eax, eax)
Symbolic@0x1320270 insn@0x080480a9[0]: number_(32, 134512809) = {defs={0x080480a9}, expr=0x080480a9<134512809>[32]}
Symbolic@0x1320270 insn@0x080480a9[0]: number_(32, 2) = {defs={0x080480a9}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480a9[0]: add({defs={0x080480a9}, expr=0x080480a9<134512809>[32]}, {defs={0x080480a9}, expr=0x00000002[32]}) = {defs={0x080480a9}, expr=0x080480ab<134512811>[32]}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(eip, {defs={0x080480a9}, expr=0x080480ab<134512811>[32]})
Symbolic@0x1320270 insn@0x080480a9[0]: boolean_(0) = {defs={0x080480a9}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480a9[0]: undefined_(32) = v5554[32]
Symbolic@0x1320270 insn@0x080480a9[0]: readRegister(eax, v5554[32]) = eax_0[32]
Symbolic@0x1320270 insn@0x080480a9[0]: undefined_(32) = v5555[32]
Symbolic@0x1320270 insn@0x080480a9[0]: readRegister(eax, v5555[32]) = eax_0[32]
Symbolic@0x1320270 insn@0x080480a9[0]: addWithCarries(eax_0[32], eax_0[32], {defs={0x080480a9}, expr=false[1]}) = {defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480a9[0]: also returns: {defs={0x080480a9}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}, 0, 8) = {defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 1, 2) = {defs={0x080480a9}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 0, 1) = {defs={0x080480a9}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a9}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 3, 4) = {defs={0x080480a9}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 2, 3) = {defs={0x080480a9}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a9}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 5, 6) = {defs={0x080480a9}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 4, 5) = {defs={0x080480a9}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a9}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 7, 8) = {defs={0x080480a9}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}, 6, 7) = {defs={0x080480a9}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32]))}, {defs={0x080480a9}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])))}, {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480a9[0]: invert({defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32])))}) = {defs={0x080480a9}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))))}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(pf, {defs={0x080480a9}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))))})
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}, 31, 32) = {defs={0x080480a9}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(sf, {defs={0x080480a9}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32]))})
Symbolic@0x1320270 insn@0x080480a9[0]: equalToZero({defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}) = {defs={0x080480a9}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(zf, {defs={0x080480a9}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))})
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}, 31, 32) = {defs={0x080480a9}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}, 30, 31) = {defs={0x080480a9}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
Symbolic@0x1320270 insn@0x080480a9[0]: extract({defs={0x080480a9}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}, 3, 4) = {defs={0x080480a9}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(af, {defs={0x080480a9}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))})
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(cf, {defs={0x080480a9}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))})
Symbolic@0x1320270 insn@0x080480a9[0]: xor_({defs={0x080480a9}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}, {defs={0x080480a9}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}) = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))))}
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(of, {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))))})
Symbolic@0x1320270 insn@0x080480a9[0]: writeRegister(eax, {defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])})
Symbolic@0x1320270 insn@0x080480a9[0]: finishInstruction(add    eax, eax)
registers:
  eax          [writer=0x080480a9] read-before-write = {defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}
  eip          [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=0x080480ab<134512811>[32]}
  cf           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
  pf           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32]))))}
  af           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32]))))}
  zf           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32]))}
  sf           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32]))}
  of           [writer=0x080480a9] write-only = {defs={0x080480a9}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] eax_0[32]) (uextend[33] 0x00000021[32] eax_0[32])))))}
  fpstatus_top = 0x0[3]
memory:

0x080480ab: add    ebx, ebx
Symbolic@0x1320270: startInstruction(0x080480ab: add    ebx, ebx)
Symbolic@0x1320270 insn@0x080480ab[1]: number_(32, 134512811) = {defs={0x080480ab}, expr=0x080480ab<134512811>[32]}
Symbolic@0x1320270 insn@0x080480ab[1]: number_(32, 2) = {defs={0x080480ab}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480ab[1]: add({defs={0x080480ab}, expr=0x080480ab<134512811>[32]}, {defs={0x080480ab}, expr=0x00000002[32]}) = {defs={0x080480ab}, expr=0x080480ad<134512813>[32]}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(eip, {defs={0x080480ab}, expr=0x080480ad<134512813>[32]})
Symbolic@0x1320270 insn@0x080480ab[1]: boolean_(0) = {defs={0x080480ab}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480ab[1]: undefined_(32) = v5596[32]
Symbolic@0x1320270 insn@0x080480ab[1]: readRegister(ebx, v5596[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480ab[1]: undefined_(32) = v5597[32]
Symbolic@0x1320270 insn@0x080480ab[1]: readRegister(ebx, v5597[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480ab[1]: addWithCarries(ebx_0[32], ebx_0[32], {defs={0x080480ab}, expr=false[1]}) = {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}
Symbolic@0x1320270 insn@0x080480ab[1]: also returns: {defs={0x080480ab}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}, 0, 8) = {defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 1, 2) = {defs={0x080480ab}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 0, 1) = {defs={0x080480ab}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480ab}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 3, 4) = {defs={0x080480ab}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 2, 3) = {defs={0x080480ab}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480ab}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 5, 6) = {defs={0x080480ab}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 4, 5) = {defs={0x080480ab}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480ab}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 7, 8) = {defs={0x080480ab}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}, 6, 7) = {defs={0x080480ab}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480ab}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ab[1]: invert({defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480ab}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(pf, {defs={0x080480ab}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}, 31, 32) = {defs={0x080480ab}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(sf, {defs={0x080480ab}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x1320270 insn@0x080480ab[1]: equalToZero({defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}) = {defs={0x080480ab}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(zf, {defs={0x080480ab}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}, 31, 32) = {defs={0x080480ab}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}, 30, 31) = {defs={0x080480ab}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ab[1]: extract({defs={0x080480ab}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}, 3, 4) = {defs={0x080480ab}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(af, {defs={0x080480ab}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(cf, {defs={0x080480ab}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ab[1]: xor_({defs={0x080480ab}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}, {defs={0x080480ab}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}) = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))))}
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(of, {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))))})
Symbolic@0x1320270 insn@0x080480ab[1]: writeRegister(ebx, {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])})
Symbolic@0x1320270 insn@0x080480ab[1]: finishInstruction(add    ebx, ebx)
registers:
  eax          [writer=0x080480a9] read-before-write = {defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}
  ebx          [writer=0x080480ab] read-before-write = {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip          [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=0x080480ad<134512813>[32]}
  cf           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
  pf           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] ebx_0[32] ebx_0[32]))))}
  af           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32]))))}
  zf           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(zerop[1] (add[32] ebx_0[32] ebx_0[32]))}
  sf           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] ebx_0[32] ebx_0[32]))}
  of           [writer=0x080480ab] write-only = {defs={0x080480ab}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] ebx_0[32]) (uextend[33] 0x00000021[32] ebx_0[32])))))}
  fpstatus_top = 0x0[3]
memory:

0x080480ad: add    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480ad: add    eax, ebx)
Symbolic@0x1320270 insn@0x080480ad[2]: number_(32, 134512813) = {defs={0x080480ad}, expr=0x080480ad<134512813>[32]}
Symbolic@0x1320270 insn@0x080480ad[2]: number_(32, 2) = {defs={0x080480ad}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480ad[2]: add({defs={0x080480ad}, expr=0x080480ad<134512813>[32]}, {defs={0x080480ad}, expr=0x00000002[32]}) = {defs={0x080480ad}, expr=0x080480af<134512815>[32]}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(eip, {defs={0x080480ad}, expr=0x080480af<134512815>[32]})
Symbolic@0x1320270 insn@0x080480ad[2]: boolean_(0) = {defs={0x080480ad}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480ad[2]: undefined_(32) = v5644[32]
Symbolic@0x1320270 insn@0x080480ad[2]: readRegister(ebx, v5644[32]) = {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}
Symbolic@0x1320270 insn@0x080480ad[2]: undefined_(32) = v5646[32]
Symbolic@0x1320270 insn@0x080480ad[2]: readRegister(eax, v5646[32]) = {defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480ad[2]: addWithCarries({defs={0x080480a9}, expr=(add[32] eax_0[32] eax_0[32])}, {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}, {defs={0x080480ad}, expr=false[1]}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
Symbolic@0x1320270 insn@0x080480ad[2]: also returns: {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}, 0, 8) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 1, 2) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 0, 1) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 3, 4) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 2, 3) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 5, 6) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 4, 5) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 7, 8) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, 6, 7) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}
Symbolic@0x1320270 insn@0x080480ad[2]: invert({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(pf, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}, 31, 32) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(sf, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x1320270 insn@0x080480ad[2]: equalToZero({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(zf, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))})
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}, 31, 32) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}, 30, 31) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ad[2]: extract({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}, 3, 4) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(af, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(cf, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))})
Symbolic@0x1320270 insn@0x080480ad[2]: xor_({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))))}
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(of, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))))})
Symbolic@0x1320270 insn@0x080480ad[2]: writeRegister(eax, {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])})
Symbolic@0x1320270 insn@0x080480ad[2]: finishInstruction(add    eax, ebx)
registers:
  eax          [writer=0x080480ad] read-before-write = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
  ebx          [writer=0x080480ab] read-before-write = {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip          [writer=0x080480ad] write-only = {defs={0x080480ad}, expr=0x080480af<134512815>[32]}
  cf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
  pf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
  af           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
  zf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  sf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  of           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))))}
  fpstatus_top = 0x0[3]
memory:

0x080480af: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480af: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480af[3]: number_(32, 134512815) = {defs={0x080480af}, expr=0x080480af<134512815>[32]}
Symbolic@0x1320270 insn@0x080480af[3]: number_(32, 2) = {defs={0x080480af}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480af[3]: add({defs={0x080480af}, expr=0x080480af<134512815>[32]}, {defs={0x080480af}, expr=0x00000002[32]}) = {defs={0x080480af}, expr=0x080480b1<134512817>[32]}
Symbolic@0x1320270 insn@0x080480af[3]: writeRegister(eip, {defs={0x080480af}, expr=0x080480b1<134512817>[32]})
Symbolic@0x1320270 insn@0x080480af[3]: undefined_(1) = v5693[1]
Symbolic@0x1320270 insn@0x080480af[3]: readRegister(zf, v5693[1]) = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
Symbolic@0x1320270 insn@0x080480af[3]: undefined_(32) = v5695[32]
Symbolic@0x1320270 insn@0x080480af[3]: readRegister(eip, v5695[32]) = {defs={0x080480af}, expr=0x080480b1<134512817>[32]}
Symbolic@0x1320270 insn@0x080480af[3]: number_(32, 134512802) = {defs={0x080480af}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480af[3]: unsignedExtend({defs={0x080480af}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480af}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480af[3]: ite({defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}, {defs={0x080480af}, expr=0x080480a2<134512802>[32]}, {defs={0x080480af}, expr=0x080480b1<134512817>[32]}) = {defs={0x080480a9,0x080480ab,0x080480ad,0x080480af}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480a2<134512802>[32] 0x080480b1<134512817>[32])}
Symbolic@0x1320270 insn@0x080480af[3]: writeRegister(eip, {defs={0x080480a9,0x080480ab,0x080480ad,0x080480af}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480a2<134512802>[32] 0x080480b1<134512817>[32])})
Symbolic@0x1320270 insn@0x080480af[3]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480ad] read-before-write = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])}
  ebx          [writer=0x080480ab] read-before-write = {defs={0x080480ab}, expr=(add[32] ebx_0[32] ebx_0[32])}
  eip          [writer=0x080480af] = {defs={0x080480a9,0x080480ab,0x080480ad,0x080480af}, expr=(ite[32] (zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) 0x080480a2<134512802>[32] 0x080480b1<134512817>[32])}
  cf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
  pf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))))}
  af           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))))}
  zf           [writer=0x080480ad] = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(zerop[1] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  sf           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] eax_0[32] eax_0[32] ebx_0[32] ebx_0[32]))}
  of           [writer=0x080480ad] write-only = {defs={0x080480a9,0x080480ab,0x080480ad}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32]))) (uextend[33] 0x00000021[32] (add[32] eax_0[32] eax_0[32])) (uextend[33] 0x00000021[32] (add[32] ebx_0[32] ebx_0[32])))))}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480b1: mov    eax, 0x00000001
Symbolic@0x1320270: startInstruction(0x080480b1: mov    eax, 0x00000001)
Symbolic@0x1320270 insn@0x080480b1[0]: number_(32, 134512817) = {defs={0x080480b1}, expr=0x080480b1<134512817>[32]}
Symbolic@0x1320270 insn@0x080480b1[0]: number_(32, 5) = {defs={0x080480b1}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480b1[0]: add({defs={0x080480b1}, expr=0x080480b1<134512817>[32]}, {defs={0x080480b1}, expr=0x00000005[32]}) = {defs={0x080480b1}, expr=0x080480b6<134512822>[32]}
Symbolic@0x1320270 insn@0x080480b1[0]: writeRegister(eip, {defs={0x080480b1}, expr=0x080480b6<134512822>[32]})
Symbolic@0x1320270 insn@0x080480b1[0]: number_(32, 1) = {defs={0x080480b1}, expr=0x00000001[32]}
Symbolic@0x1320270 insn@0x080480b1[0]: writeRegister(eax, {defs={0x080480b1}, expr=0x00000001[32]})
Symbolic@0x1320270 insn@0x080480b1[0]: finishInstruction(mov    eax, 0x00000001)
registers:
  eax          [writer=0x080480b1] write-only = {defs={0x080480b1}, expr=0x00000001[32]}
  eip          [writer=0x080480b1] write-only = {defs={0x080480b1}, expr=0x080480b6<134512822>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480b6: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480b6: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480b6[1]: number_(32, 134512822) = {defs={0x080480b6}, expr=0x080480b6<134512822>[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: number_(32, 2) = {defs={0x080480b6}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: add({defs={0x080480b6}, expr=0x080480b6<134512822>[32]}, {defs={0x080480b6}, expr=0x00000002[32]}) = {defs={0x080480b6}, expr=0x080480b8<134512824>[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: writeRegister(eip, {defs={0x080480b6}, expr=0x080480b8<134512824>[32]})
Symbolic@0x1320270 insn@0x080480b6[1]: undefined_(1) = v6192[1]
Symbolic@0x1320270 insn@0x080480b6[1]: readRegister(zf, v6192[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480b6[1]: undefined_(32) = v6193[32]
Symbolic@0x1320270 insn@0x080480b6[1]: readRegister(eip, v6193[32]) = {defs={0x080480b6}, expr=0x080480b8<134512824>[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: number_(32, 134512802) = {defs={0x080480b6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: unsignedExtend({defs={0x080480b6}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480b6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480b6[1]: ite(zf_0[1], {defs={0x080480b6}, expr=0x080480a2<134512802>[32]}, {defs={0x080480b6}, expr=0x080480b8<134512824>[32]}) = {defs={0x080480b6}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480b8<134512824>[32])}
Symbolic@0x1320270 insn@0x080480b6[1]: writeRegister(eip, {defs={0x080480b6}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480b8<134512824>[32])})
Symbolic@0x1320270 insn@0x080480b6[1]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480b1] write-only = {defs={0x080480b1}, expr=0x00000001[32]}
  eip          [writer=0x080480b6] = {defs={0x080480b6}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480b8<134512824>[32])}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480b8: mov    eax, 0x00000003
Symbolic@0x1320270: startInstruction(0x080480b8: mov    eax, 0x00000003)
Symbolic@0x1320270 insn@0x080480b8[0]: number_(32, 134512824) = {defs={0x080480b8}, expr=0x080480b8<134512824>[32]}
Symbolic@0x1320270 insn@0x080480b8[0]: number_(32, 5) = {defs={0x080480b8}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480b8[0]: add({defs={0x080480b8}, expr=0x080480b8<134512824>[32]}, {defs={0x080480b8}, expr=0x00000005[32]}) = {defs={0x080480b8}, expr=0x080480bd<134512829>[32]}
Symbolic@0x1320270 insn@0x080480b8[0]: writeRegister(eip, {defs={0x080480b8}, expr=0x080480bd<134512829>[32]})
Symbolic@0x1320270 insn@0x080480b8[0]: number_(32, 3) = {defs={0x080480b8}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480b8[0]: writeRegister(eax, {defs={0x080480b8}, expr=0x00000003[32]})
Symbolic@0x1320270 insn@0x080480b8[0]: finishInstruction(mov    eax, 0x00000003)
registers:
  eax          [writer=0x080480b8] write-only = {defs={0x080480b8}, expr=0x00000003[32]}
  eip          [writer=0x080480b8] write-only = {defs={0x080480b8}, expr=0x080480bd<134512829>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480bd: mov    ebx, 0x00000004
Symbolic@0x1320270: startInstruction(0x080480bd: mov    ebx, 0x00000004)
Symbolic@0x1320270 insn@0x080480bd[1]: number_(32, 134512829) = {defs={0x080480bd}, expr=0x080480bd<134512829>[32]}
Symbolic@0x1320270 insn@0x080480bd[1]: number_(32, 5) = {defs={0x080480bd}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480bd[1]: add({defs={0x080480bd}, expr=0x080480bd<134512829>[32]}, {defs={0x080480bd}, expr=0x00000005[32]}) = {defs={0x080480bd}, expr=0x080480c2<134512834>[32]}
Symbolic@0x1320270 insn@0x080480bd[1]: writeRegister(eip, {defs={0x080480bd}, expr=0x080480c2<134512834>[32]})
Symbolic@0x1320270 insn@0x080480bd[1]: number_(32, 4) = {defs={0x080480bd}, expr=0x00000004[32]}
Symbolic@0x1320270 insn@0x080480bd[1]: writeRegister(ebx, {defs={0x080480bd}, expr=0x00000004[32]})
Symbolic@0x1320270 insn@0x080480bd[1]: finishInstruction(mov    ebx, 0x00000004)
registers:
  eax          [writer=0x080480b8] write-only = {defs={0x080480b8}, expr=0x00000003[32]}
  ebx          [writer=0x080480bd] write-only = {defs={0x080480bd}, expr=0x00000004[32]}
  eip          [writer=0x080480bd] write-only = {defs={0x080480bd}, expr=0x080480c2<134512834>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480c2: add    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480c2: add    eax, ebx)
Symbolic@0x1320270 insn@0x080480c2[2]: number_(32, 134512834) = {defs={0x080480c2}, expr=0x080480c2<134512834>[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: number_(32, 2) = {defs={0x080480c2}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: add({defs={0x080480c2}, expr=0x080480c2<134512834>[32]}, {defs={0x080480c2}, expr=0x00000002[32]}) = {defs={0x080480c2}, expr=0x080480c4<134512836>[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(eip, {defs={0x080480c2}, expr=0x080480c4<134512836>[32]})
Symbolic@0x1320270 insn@0x080480c2[2]: boolean_(0) = {defs={0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: undefined_(32) = v6694[32]
Symbolic@0x1320270 insn@0x080480c2[2]: readRegister(ebx, v6694[32]) = {defs={0x080480bd}, expr=0x00000004[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: undefined_(32) = v6696[32]
Symbolic@0x1320270 insn@0x080480c2[2]: readRegister(eax, v6696[32]) = {defs={0x080480b8}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: addWithCarries({defs={0x080480b8}, expr=0x00000003[32]}, {defs={0x080480bd}, expr=0x00000004[32]}, {defs={0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: also returns: {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000000[32]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}, 0, 8) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 1, 2) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 0, 1) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 3, 4) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 2, 3) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 5, 6) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 4, 5) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 7, 8) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x07[8]}, 6, 7) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: invert({defs={0x080480b8,0x080480bd,0x080480c2}, expr=true[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(pf, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}, 31, 32) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(sf, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: equalToZero({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(zf, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000000[32]}, 31, 32) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000000[32]}, 30, 31) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: extract({defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000000[32]}, 3, 4) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(af, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(cf, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: xor_({defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}) = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(of, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480c2[2]: writeRegister(eax, {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]})
Symbolic@0x1320270 insn@0x080480c2[2]: finishInstruction(add    eax, ebx)
registers:
  eax          [writer=0x080480c2] = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}
  ebx          [writer=0x080480bd] = {defs={0x080480bd}, expr=0x00000004[32]}
  eip          [writer=0x080480c2] write-only = {defs={0x080480c2}, expr=0x080480c4<134512836>[32]}
  cf           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  pf           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  af           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  zf           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  sf           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  of           [writer=0x080480c2] write-only = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x080480c4: neg    ecx
Symbolic@0x1320270: startInstruction(0x080480c4: neg    ecx)
Symbolic@0x1320270 insn@0x080480c4[3]: number_(32, 134512836) = {defs={0x080480c4}, expr=0x080480c4<134512836>[32]}
Symbolic@0x1320270 insn@0x080480c4[3]: number_(32, 2) = {defs={0x080480c4}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480c4[3]: add({defs={0x080480c4}, expr=0x080480c4<134512836>[32]}, {defs={0x080480c4}, expr=0x00000002[32]}) = {defs={0x080480c4}, expr=0x080480c6<134512838>[32]}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(eip, {defs={0x080480c4}, expr=0x080480c6<134512838>[32]})
Symbolic@0x1320270 insn@0x080480c4[3]: undefined_(32) = v6727[32]
Symbolic@0x1320270 insn@0x080480c4[3]: readRegister(ecx, v6727[32]) = ecx_0[32]
Symbolic@0x1320270 insn@0x080480c4[3]: boolean_(0) = {defs={0x080480c4}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480c4[3]: invert(ecx_0[32]) = {defs={0x080480c4}, expr=(invert[32] ecx_0[32])}
Symbolic@0x1320270 insn@0x080480c4[3]: number_(32, 0) = {defs={0x080480c4}, expr=0x00000000[32]}
Symbolic@0x1320270 insn@0x080480c4[3]: invert({defs={0x080480c4}, expr=false[1]}) = {defs={0x080480c4}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480c4[3]: addWithCarries({defs={0x080480c4}, expr=0x00000000[32]}, {defs={0x080480c4}, expr=(invert[32] ecx_0[32])}, {defs={0x080480c4}, expr=true[1]}) = {defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
Symbolic@0x1320270 insn@0x080480c4[3]: also returns: {defs={0x080480c4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}, 0, 8) = {defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 1, 2) = {defs={0x080480c4}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 0, 1) = {defs={0x080480c4}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480c4}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 3, 4) = {defs={0x080480c4}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 2, 3) = {defs={0x080480c4}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480c4}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 5, 6) = {defs={0x080480c4}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 4, 5) = {defs={0x080480c4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480c4}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 7, 8) = {defs={0x080480c4}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 6, 7) = {defs={0x080480c4}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480c4}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480c4[3]: invert({defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480c4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(pf, {defs={0x080480c4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))})
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}, 31, 32) = {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(sf, {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))})
Symbolic@0x1320270 insn@0x080480c4[3]: equalToZero({defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}) = {defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(zf, {defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))})
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 31, 32) = {defs={0x080480c4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 30, 31) = {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480c4[3]: extract({defs={0x080480c4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 3, 4) = {defs={0x080480c4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480c4[3]: invert({defs={0x080480c4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(af, {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480c4[3]: invert({defs={0x080480c4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(cf, {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480c4[3]: xor_({defs={0x080480c4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(of, {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480c4[3]: writeRegister(ecx, {defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])})
Symbolic@0x1320270 insn@0x080480c4[3]: finishInstruction(neg    ecx)
registers:
  eax          [writer=0x080480c2] = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}
  ecx          [writer=0x080480c4] read-before-write = {defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
  ebx          [writer=0x080480bd] = {defs={0x080480bd}, expr=0x00000004[32]}
  eip          [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=0x080480c6<134512838>[32]}
  cf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  pf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
  af           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  zf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  sf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  of           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:

0x080480c6: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480c6: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480c6[4]: number_(32, 134512838) = {defs={0x080480c6}, expr=0x080480c6<134512838>[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: number_(32, 2) = {defs={0x080480c6}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: add({defs={0x080480c6}, expr=0x080480c6<134512838>[32]}, {defs={0x080480c6}, expr=0x00000002[32]}) = {defs={0x080480c6}, expr=0x080480c8<134512840>[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: writeRegister(eip, {defs={0x080480c6}, expr=0x080480c8<134512840>[32]})
Symbolic@0x1320270 insn@0x080480c6[4]: undefined_(1) = v6777[1]
Symbolic@0x1320270 insn@0x080480c6[4]: readRegister(zf, v6777[1]) = {defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480c6[4]: undefined_(32) = v6779[32]
Symbolic@0x1320270 insn@0x080480c6[4]: readRegister(eip, v6779[32]) = {defs={0x080480c6}, expr=0x080480c8<134512840>[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: number_(32, 134512802) = {defs={0x080480c6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: unsignedExtend({defs={0x080480c6}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480c6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480c6[4]: ite({defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480c6}, expr=0x080480a2<134512802>[32]}, {defs={0x080480c6}, expr=0x080480c8<134512840>[32]}) = {defs={0x080480c4,0x080480c6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480c8<134512840>[32])}
Symbolic@0x1320270 insn@0x080480c6[4]: writeRegister(eip, {defs={0x080480c4,0x080480c6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480c8<134512840>[32])})
Symbolic@0x1320270 insn@0x080480c6[4]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480c2] = {defs={0x080480b8,0x080480bd,0x080480c2}, expr=0x00000007[32]}
  ecx          [writer=0x080480c4] read-before-write = {defs={0x080480c4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
  ebx          [writer=0x080480bd] = {defs={0x080480bd}, expr=0x00000004[32]}
  eip          [writer=0x080480c6] = {defs={0x080480c4,0x080480c6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480c8<134512840>[32])}
  cf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  pf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
  af           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  zf           [writer=0x080480c4] = {defs={0x080480c4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  sf           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  of           [writer=0x080480c4] write-only = {defs={0x080480c4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480c8: mov    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480c8: mov    eax, ebx)
Symbolic@0x1320270 insn@0x080480c8[0]: number_(32, 134512840) = {defs={0x080480c8}, expr=0x080480c8<134512840>[32]}
Symbolic@0x1320270 insn@0x080480c8[0]: number_(32, 2) = {defs={0x080480c8}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480c8[0]: add({defs={0x080480c8}, expr=0x080480c8<134512840>[32]}, {defs={0x080480c8}, expr=0x00000002[32]}) = {defs={0x080480c8}, expr=0x080480ca<134512842>[32]}
Symbolic@0x1320270 insn@0x080480c8[0]: writeRegister(eip, {defs={0x080480c8}, expr=0x080480ca<134512842>[32]})
Symbolic@0x1320270 insn@0x080480c8[0]: undefined_(32) = v7272[32]
Symbolic@0x1320270 insn@0x080480c8[0]: readRegister(ebx, v7272[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480c8[0]: writeRegister(eax, ebx_0[32])
Symbolic@0x1320270 insn@0x080480c8[0]: finishInstruction(mov    eax, ebx)
registers:
  eax          [writer=0x080480c8] write-only = ebx_0[32]
  eip          [writer=0x080480c8] write-only = {defs={0x080480c8}, expr=0x080480ca<134512842>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480ca: mov    ah, bh
Symbolic@0x1320270: startInstruction(0x080480ca: mov    ah, bh)
Symbolic@0x1320270 insn@0x080480ca[1]: number_(32, 134512842) = {defs={0x080480ca}, expr=0x080480ca<134512842>[32]}
Symbolic@0x1320270 insn@0x080480ca[1]: number_(32, 2) = {defs={0x080480ca}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480ca[1]: add({defs={0x080480ca}, expr=0x080480ca<134512842>[32]}, {defs={0x080480ca}, expr=0x00000002[32]}) = {defs={0x080480ca}, expr=0x080480cc<134512844>[32]}
Symbolic@0x1320270 insn@0x080480ca[1]: writeRegister(eip, {defs={0x080480ca}, expr=0x080480cc<134512844>[32]})
Symbolic@0x1320270 insn@0x080480ca[1]: undefined_(8) = v7277[8]
Symbolic@0x1320270 insn@0x080480ca[1]: readRegister(bh, v7277[8]) = (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
Symbolic@0x1320270 insn@0x080480ca[1]: writeRegister(ah, (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32]))
Symbolic@0x1320270 insn@0x080480ca[1]: finishInstruction(mov    ah, bh)
registers:
  al           [writer=0x080480c8] write-only = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  ah           [writer=0x080480ca] write-only = (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  REG0.0@16+16 [writer=0x080480c8] write-only = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  bl           read-before-write = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  bh           read-before-write = (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  REG0.3@16+16 read-before-write = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  eip          [writer=0x080480ca] write-only = {defs={0x080480ca}, expr=0x080480cc<134512844>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480cc: mov    ah, bl
Symbolic@0x1320270: startInstruction(0x080480cc: mov    ah, bl)
Symbolic@0x1320270 insn@0x080480cc[2]: number_(32, 134512844) = {defs={0x080480cc}, expr=0x080480cc<134512844>[32]}
Symbolic@0x1320270 insn@0x080480cc[2]: number_(32, 2) = {defs={0x080480cc}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480cc[2]: add({defs={0x080480cc}, expr=0x080480cc<134512844>[32]}, {defs={0x080480cc}, expr=0x00000002[32]}) = {defs={0x080480cc}, expr=0x080480ce<134512846>[32]}
Symbolic@0x1320270 insn@0x080480cc[2]: writeRegister(eip, {defs={0x080480cc}, expr=0x080480ce<134512846>[32]})
Symbolic@0x1320270 insn@0x080480cc[2]: undefined_(8) = v7288[8]
Symbolic@0x1320270 insn@0x080480cc[2]: readRegister(bl, v7288[8]) = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
Symbolic@0x1320270 insn@0x080480cc[2]: writeRegister(ah, (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32]))
Symbolic@0x1320270 insn@0x080480cc[2]: finishInstruction(mov    ah, bl)
registers:
  al           [writer=0x080480c8] write-only = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  ah           [writer=0x080480cc] write-only = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  REG0.0@16+16 [writer=0x080480c8] write-only = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  bl           read-before-write = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  bh           read-before-write = (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  REG0.3@16+16 read-before-write = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  eip          [writer=0x080480cc] write-only = {defs={0x080480cc}, expr=0x080480ce<134512846>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480ce: mov    ax, cx
Symbolic@0x1320270: startInstruction(0x080480ce: mov    ax, cx)
Symbolic@0x1320270 insn@0x080480ce[3]: number_(32, 134512846) = {defs={0x080480ce}, expr=0x080480ce<134512846>[32]}
Symbolic@0x1320270 insn@0x080480ce[3]: number_(32, 3) = {defs={0x080480ce}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480ce[3]: add({defs={0x080480ce}, expr=0x080480ce<134512846>[32]}, {defs={0x080480ce}, expr=0x00000003[32]}) = {defs={0x080480ce}, expr=0x080480d1<134512849>[32]}
Symbolic@0x1320270 insn@0x080480ce[3]: writeRegister(eip, {defs={0x080480ce}, expr=0x080480d1<134512849>[32]})
Symbolic@0x1320270 insn@0x080480ce[3]: undefined_(16) = v7295[16]
Symbolic@0x1320270 insn@0x080480ce[3]: readRegister(cx, v7295[16]) = cx_0[16]
Symbolic@0x1320270 insn@0x080480ce[3]: writeRegister(ax, cx_0[16])
Symbolic@0x1320270 insn@0x080480ce[3]: finishInstruction(mov    ax, cx)
registers:
  ax           [writer=0x080480ce] write-only = cx_0[16]
  REG0.0@16+16 [writer=0x080480c8] write-only = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  bl           read-before-write = (extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
  bh           read-before-write = (extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  REG0.3@16+16 read-before-write = (extract[16] 0x00000010[32] 0x00000020[32] ebx_0[32])
  eip          [writer=0x080480ce] write-only = {defs={0x080480ce}, expr=0x080480d1<134512849>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480d1: mov    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480d1: mov    eax, ebx)
Symbolic@0x1320270 insn@0x080480d1[4]: number_(32, 134512849) = {defs={0x080480d1}, expr=0x080480d1<134512849>[32]}
Symbolic@0x1320270 insn@0x080480d1[4]: number_(32, 2) = {defs={0x080480d1}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480d1[4]: add({defs={0x080480d1}, expr=0x080480d1<134512849>[32]}, {defs={0x080480d1}, expr=0x00000002[32]}) = {defs={0x080480d1}, expr=0x080480d3<134512851>[32]}
Symbolic@0x1320270 insn@0x080480d1[4]: writeRegister(eip, {defs={0x080480d1}, expr=0x080480d3<134512851>[32]})
Symbolic@0x1320270 insn@0x080480d1[4]: undefined_(32) = v7302[32]
Symbolic@0x1320270 insn@0x080480d1[4]: readRegister(ebx, v7302[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480d1[4]: writeRegister(eax, ebx_0[32])
Symbolic@0x1320270 insn@0x080480d1[4]: finishInstruction(mov    eax, ebx)
registers:
  eax          [writer=0x080480d1] write-only = ebx_0[32]
  eip          [writer=0x080480d1] write-only = {defs={0x080480d1}, expr=0x080480d3<134512851>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480d3: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480d3: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480d3[5]: number_(32, 134512851) = {defs={0x080480d3}, expr=0x080480d3<134512851>[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: number_(32, 2) = {defs={0x080480d3}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: add({defs={0x080480d3}, expr=0x080480d3<134512851>[32]}, {defs={0x080480d3}, expr=0x00000002[32]}) = {defs={0x080480d3}, expr=0x080480d5<134512853>[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: writeRegister(eip, {defs={0x080480d3}, expr=0x080480d5<134512853>[32]})
Symbolic@0x1320270 insn@0x080480d3[5]: undefined_(1) = v7314[1]
Symbolic@0x1320270 insn@0x080480d3[5]: readRegister(zf, v7314[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480d3[5]: undefined_(32) = v7315[32]
Symbolic@0x1320270 insn@0x080480d3[5]: readRegister(eip, v7315[32]) = {defs={0x080480d3}, expr=0x080480d5<134512853>[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: number_(32, 134512802) = {defs={0x080480d3}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: unsignedExtend({defs={0x080480d3}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480d3}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480d3[5]: ite(zf_0[1], {defs={0x080480d3}, expr=0x080480a2<134512802>[32]}, {defs={0x080480d3}, expr=0x080480d5<134512853>[32]}) = {defs={0x080480d3}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d5<134512853>[32])}
Symbolic@0x1320270 insn@0x080480d3[5]: writeRegister(eip, {defs={0x080480d3}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d5<134512853>[32])})
Symbolic@0x1320270 insn@0x080480d3[5]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480d1] write-only = ebx_0[32]
  eip          [writer=0x080480d3] = {defs={0x080480d3}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d5<134512853>[32])}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480d5: mov    dword ds:[eax], ebx
Symbolic@0x1320270: startInstruction(0x080480d5: mov    dword ds:[eax], ebx)
Symbolic@0x1320270 insn@0x080480d5[0]: number_(32, 134512853) = {defs={0x080480d5}, expr=0x080480d5<134512853>[32]}
Symbolic@0x1320270 insn@0x080480d5[0]: number_(32, 2) = {defs={0x080480d5}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480d5[0]: add({defs={0x080480d5}, expr=0x080480d5<134512853>[32]}, {defs={0x080480d5}, expr=0x00000002[32]}) = {defs={0x080480d5}, expr=0x080480d7<134512855>[32]}
Symbolic@0x1320270 insn@0x080480d5[0]: writeRegister(eip, {defs={0x080480d5}, expr=0x080480d7<134512855>[32]})
Symbolic@0x1320270 insn@0x080480d5[0]: undefined_(32) = v7808[32]
Symbolic@0x1320270 insn@0x080480d5[0]: readRegister(ebx, v7808[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480d5[0]: undefined_(32) = v7809[32]
Symbolic@0x1320270 insn@0x080480d5[0]: readRegister(eax, v7809[32]) = eax_0[32]
Symbolic@0x1320270 insn@0x080480d5[0]: boolean_(1) = {defs={0x080480d5}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480d5[0]: writeMemory(ds, eax_0[32], ebx_0[32], {defs={0x080480d5}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480d5[0]: finishInstruction(mov    dword ds:[eax], ebx)
registers:
  eip          [writer=0x080480d5] write-only = {defs={0x080480d5}, expr=0x080480d7<134512855>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] eax_0[32] 0x00000003[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] eax_0[32] 0x00000002[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] eax_0[32] 0x00000001[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=eax_0[32] writer=0x080480d5 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])

0x080480d7: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480d7: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480d7[1]: number_(32, 134512855) = {defs={0x080480d7}, expr=0x080480d7<134512855>[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: number_(32, 2) = {defs={0x080480d7}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: add({defs={0x080480d7}, expr=0x080480d7<134512855>[32]}, {defs={0x080480d7}, expr=0x00000002[32]}) = {defs={0x080480d7}, expr=0x080480d9<134512857>[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: writeRegister(eip, {defs={0x080480d7}, expr=0x080480d9<134512857>[32]})
Symbolic@0x1320270 insn@0x080480d7[1]: undefined_(1) = v7822[1]
Symbolic@0x1320270 insn@0x080480d7[1]: readRegister(zf, v7822[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480d7[1]: undefined_(32) = v7823[32]
Symbolic@0x1320270 insn@0x080480d7[1]: readRegister(eip, v7823[32]) = {defs={0x080480d7}, expr=0x080480d9<134512857>[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: number_(32, 134512802) = {defs={0x080480d7}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: unsignedExtend({defs={0x080480d7}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480d7}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480d7[1]: ite(zf_0[1], {defs={0x080480d7}, expr=0x080480a2<134512802>[32]}, {defs={0x080480d7}, expr=0x080480d9<134512857>[32]}) = {defs={0x080480d7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d9<134512857>[32])}
Symbolic@0x1320270 insn@0x080480d7[1]: writeRegister(eip, {defs={0x080480d7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d9<134512857>[32])})
Symbolic@0x1320270 insn@0x080480d7[1]: finishInstruction(je     0x080480a2<end>)
registers:
  eip          [writer=0x080480d7] = {defs={0x080480d7}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480d9<134512857>[32])}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] eax_0[32] 0x00000003[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000018[32] 0x00000020[32] ebx_0[32])
  addr=(add[32] eax_0[32] 0x00000002[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000010[32] 0x00000018[32] ebx_0[32])
  addr=(add[32] eax_0[32] 0x00000001[32]) writer=0x080480d5 write-only value=(extract[8] 0x00000008[32] 0x00000010[32] ebx_0[32])
  addr=eax_0[32] writer=0x080480d5 write-only value=(extract[8] 0x00000000[32] 0x00000008[32] ebx_0[32])
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480d9: mov    eax, dword ds:[ebx]
Symbolic@0x1320270: startInstruction(0x080480d9: mov    eax, dword ds:[ebx])
Symbolic@0x1320270 insn@0x080480d9[0]: number_(32, 134512857) = {defs={0x080480d9}, expr=0x080480d9<134512857>[32]}
Symbolic@0x1320270 insn@0x080480d9[0]: number_(32, 2) = {defs={0x080480d9}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480d9[0]: add({defs={0x080480d9}, expr=0x080480d9<134512857>[32]}, {defs={0x080480d9}, expr=0x00000002[32]}) = {defs={0x080480d9}, expr=0x080480db<134512859>[32]}
Symbolic@0x1320270 insn@0x080480d9[0]: writeRegister(eip, {defs={0x080480d9}, expr=0x080480db<134512859>[32]})
Symbolic@0x1320270 insn@0x080480d9[0]: undefined_(32) = v8316[32]
Symbolic@0x1320270 insn@0x080480d9[0]: readRegister(ebx, v8316[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480d9[0]: undefined_(32) = v8317[32]
Symbolic@0x1320270 insn@0x080480d9[0]: boolean_(1) = {defs={0x080480d9}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480d9[0]: readMemory(ds, ebx_0[32], v8317[32], {defs={0x080480d9}, expr=true[1]}) = v8317[32]
Symbolic@0x1320270 insn@0x080480d9[0]: writeRegister(eax, v8317[32])
Symbolic@0x1320270 insn@0x080480d9[0]: finishInstruction(mov    eax, dword ds:[ebx])
registers:
  eax          [writer=0x080480d9] write-only = v8317[32]
  eip          [writer=0x080480d9] write-only = {defs={0x080480d9}, expr=0x080480db<134512859>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v8317[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v8317[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v8317[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v8317[32])

0x080480db: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480db: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480db[1]: number_(32, 134512859) = {defs={0x080480db}, expr=0x080480db<134512859>[32]}
Symbolic@0x1320270 insn@0x080480db[1]: number_(32, 2) = {defs={0x080480db}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480db[1]: add({defs={0x080480db}, expr=0x080480db<134512859>[32]}, {defs={0x080480db}, expr=0x00000002[32]}) = {defs={0x080480db}, expr=0x080480dd<134512861>[32]}
Symbolic@0x1320270 insn@0x080480db[1]: writeRegister(eip, {defs={0x080480db}, expr=0x080480dd<134512861>[32]})
Symbolic@0x1320270 insn@0x080480db[1]: undefined_(1) = v8337[1]
Symbolic@0x1320270 insn@0x080480db[1]: readRegister(zf, v8337[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x080480db[1]: undefined_(32) = v8338[32]
Symbolic@0x1320270 insn@0x080480db[1]: readRegister(eip, v8338[32]) = {defs={0x080480db}, expr=0x080480dd<134512861>[32]}
Symbolic@0x1320270 insn@0x080480db[1]: number_(32, 134512802) = {defs={0x080480db}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480db[1]: unsignedExtend({defs={0x080480db}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480db}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480db[1]: ite(zf_0[1], {defs={0x080480db}, expr=0x080480a2<134512802>[32]}, {defs={0x080480db}, expr=0x080480dd<134512861>[32]}) = {defs={0x080480db}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480dd<134512861>[32])}
Symbolic@0x1320270 insn@0x080480db[1]: writeRegister(eip, {defs={0x080480db}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480dd<134512861>[32])})
Symbolic@0x1320270 insn@0x080480db[1]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480d9] write-only = v8317[32]
  eip          [writer=0x080480db] = {defs={0x080480db}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x080480dd<134512861>[32])}
  fpstatus_top = 0x0[3]
memory:
  addr=(add[32] ebx_0[32] 0x00000003[32]) read-before-write value=(extract[8] 0x00000018[32] 0x00000020[32] v8317[32])
  addr=(add[32] ebx_0[32] 0x00000002[32]) read-before-write value=(extract[8] 0x00000010[32] 0x00000018[32] v8317[32])
  addr=(add[32] ebx_0[32] 0x00000001[32]) read-before-write value=(extract[8] 0x00000008[32] 0x00000010[32] v8317[32])
  addr=ebx_0[32] read-before-write value=(extract[8] 0x00000000[32] 0x00000008[32] v8317[32])
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480dd: shr    eax, 0x0a
Symbolic@0x1320270: startInstruction(0x080480dd: shr    eax, 0x0a)
Symbolic@0x1320270 insn@0x080480dd[0]: number_(32, 134512861) = {defs={0x080480dd}, expr=0x080480dd<134512861>[32]}
Symbolic@0x1320270 insn@0x080480dd[0]: number_(32, 3) = {defs={0x080480dd}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480dd[0]: add({defs={0x080480dd}, expr=0x080480dd<134512861>[32]}, {defs={0x080480dd}, expr=0x00000003[32]}) = {defs={0x080480dd}, expr=0x080480e0<134512864>[32]}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(eip, {defs={0x080480dd}, expr=0x080480e0<134512864>[32]})
Symbolic@0x1320270 insn@0x080480dd[0]: number_(8, 10) = {defs={0x080480dd}, expr=0x0a[8]}
Symbolic@0x1320270 insn@0x080480dd[0]: unspecified_(32) = v8831[32]<unspec>
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(32) = v8832[32]
Symbolic@0x1320270 insn@0x080480dd[0]: readRegister(eax, v8832[32]) = eax_0[32]
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=0x0a[8]}, 0, 5) = {defs={0x080480dd}, expr=0x0a[5]}
Symbolic@0x1320270 insn@0x080480dd[0]: equalToZero({defs={0x080480dd}, expr=0x0a[5]}) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=0x0a[8]}, 5, 8) = {defs={0x080480dd}, expr=0x0[3]}
Symbolic@0x1320270 insn@0x080480dd[0]: equalToZero({defs={0x080480dd}, expr=0x0[3]}) = {defs={0x080480dd}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: invert({defs={0x080480dd}, expr=true[1]}) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: number_(5, 31) = {defs={0x080480dd}, expr=0x1f<-1>[5]}
Symbolic@0x1320270 insn@0x080480dd[0]: add({defs={0x080480dd}, expr=0x0a[5]}, {defs={0x080480dd}, expr=0x1f<-1>[5]}) = {defs={0x080480dd}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480dd[0]: equalToZero({defs={0x080480dd}, expr=0x09[5]}) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: shiftRight(eax_0[32], {defs={0x080480dd}, expr=0x0a[5]}) = {defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: extract(eax_0[32], 31, 32) = {defs={0x080480dd}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: unspecified_(1) = v8843[1]<unspec>
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8844[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(af, v8844[1]) = af_0[1]
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=false[1]}, af_0[1], v8843[1]<unspec>) = {defs={0x080480dd}, expr=v8843[1]<unspec>}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(af, {defs={0x080480dd}, expr=v8843[1]<unspec>})
Symbolic@0x1320270 insn@0x080480dd[0]: add({defs={0x080480dd}, expr=0x0a[5]}, {defs={0x080480dd}, expr=0x1f<-1>[5]}) = {defs={0x080480dd}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480dd[0]: shiftRight(eax_0[32], {defs={0x080480dd}, expr=0x09[5]}) = {defs={0x080480dd}, expr=(concat[32] 0x000[9] (extract[23] 0x00000009[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(concat[32] 0x000[9] (extract[23] 0x00000009[32] 0x00000020[32] eax_0[32]))}, 0, 1) = {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: unspecified_(1) = v8849[1]<unspec>
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=false[1]}, v8849[1]<unspec>, {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}) = {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8850[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(cf, v8850[1]) = v8850[1]
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=false[1]}, v8850[1], {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}) = {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(cf, {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])})
Symbolic@0x1320270 insn@0x080480dd[0]: unspecified_(1) = v8853[1]<unspec>
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8854[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(of, v8854[1]) = v8854[1]
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=false[1]}, v8854[1], v8853[1]<unspec>) = {defs={0x080480dd}, expr=v8853[1]<unspec>}
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=false[1]}, {defs={0x080480dd}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}, {defs={0x080480dd}, expr=v8853[1]<unspec>}) = {defs={0x080480dd}, expr=v8853[1]<unspec>}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(of, {defs={0x080480dd}, expr=v8853[1]<unspec>})
Symbolic@0x1320270 insn@0x080480dd[0]: invert({defs={0x080480dd}, expr=false[1]}) = {defs={0x080480dd}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, 0, 8) = {defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8860[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(pf, v8860[1]) = v8860[1]
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 1, 2) = {defs={0x080480dd}, expr=(extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 0, 1) = {defs={0x080480dd}, expr=(extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32])}, {defs={0x080480dd}, expr=(extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32])}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 3, 4) = {defs={0x080480dd}, expr=(extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 2, 3) = {defs={0x080480dd}, expr=(extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32])}, {defs={0x080480dd}, expr=(extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32])}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 5, 6) = {defs={0x080480dd}, expr=(extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 4, 5) = {defs={0x080480dd}, expr=(extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32])}, {defs={0x080480dd}, expr=(extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32])}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 7, 8) = {defs={0x080480dd}, expr=(extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: extract({defs={0x080480dd}, expr=(extract[8] 0x0000000a[32] 0x00000012[32] eax_0[32])}, 6, 7) = {defs={0x080480dd}, expr=(extract[1] 0x00000010[32] 0x00000011[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(extract[1] 0x00000010[32] 0x00000011[32] eax_0[32])}, {defs={0x080480dd}, expr=(extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]))}, {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]))}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]))}, {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: xor_({defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]))}, {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}) = {defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480dd[0]: invert({defs={0x080480dd}, expr=(bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32]))}) = {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=true[1]}, {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}, v8860[1]) = {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(pf, {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))})
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8879[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(sf, v8879[1]) = v8879[1]
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=true[1]}, {defs={0x080480dd}, expr=false[1]}, v8879[1]) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(sf, {defs={0x080480dd}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480dd[0]: undefined_(1) = v8882[1]
Symbolic@0x1320270 insn@0x080480dd[0]: peekRegister(zf, v8882[1]) = v8882[1]
Symbolic@0x1320270 insn@0x080480dd[0]: equalToZero({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}) = {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480dd[0]: ite({defs={0x080480dd}, expr=true[1]}, {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}, v8882[1]) = {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(zf, {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))})
Symbolic@0x1320270 insn@0x080480dd[0]: writeRegister(eax, {defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))})
Symbolic@0x1320270 insn@0x080480dd[0]: finishInstruction(shr    eax, 0x0a)
registers:
  eax          [writer=0x080480dd] read-before-write = {defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}
  eip          [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=0x080480e0<134512864>[32]}
  cf           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}
  pf           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}
  af           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=v8843[1]<unspec>}
  zf           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}
  sf           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=false[1]}
  of           [writer=0x080480dd] write-only = {defs={0x080480dd}, expr=v8853[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080480e0: shr    eax, 0x0a
Symbolic@0x1320270: startInstruction(0x080480e0: shr    eax, 0x0a)
Symbolic@0x1320270 insn@0x080480e0[1]: number_(32, 134512864) = {defs={0x080480e0}, expr=0x080480e0<134512864>[32]}
Symbolic@0x1320270 insn@0x080480e0[1]: number_(32, 3) = {defs={0x080480e0}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480e0[1]: add({defs={0x080480e0}, expr=0x080480e0<134512864>[32]}, {defs={0x080480e0}, expr=0x00000003[32]}) = {defs={0x080480e0}, expr=0x080480e3<134512867>[32]}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(eip, {defs={0x080480e0}, expr=0x080480e3<134512867>[32]})
Symbolic@0x1320270 insn@0x080480e0[1]: number_(8, 10) = {defs={0x080480e0}, expr=0x0a[8]}
Symbolic@0x1320270 insn@0x080480e0[1]: unspecified_(32) = v8891[32]<unspec>
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(32) = v8892[32]
Symbolic@0x1320270 insn@0x080480e0[1]: readRegister(eax, v8892[32]) = {defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480e0}, expr=0x0a[8]}, 0, 5) = {defs={0x080480e0}, expr=0x0a[5]}
Symbolic@0x1320270 insn@0x080480e0[1]: equalToZero({defs={0x080480e0}, expr=0x0a[5]}) = {defs={0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480e0}, expr=0x0a[8]}, 5, 8) = {defs={0x080480e0}, expr=0x0[3]}
Symbolic@0x1320270 insn@0x080480e0[1]: equalToZero({defs={0x080480e0}, expr=0x0[3]}) = {defs={0x080480e0}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: invert({defs={0x080480e0}, expr=true[1]}) = {defs={0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: number_(5, 31) = {defs={0x080480e0}, expr=0x1f<-1>[5]}
Symbolic@0x1320270 insn@0x080480e0[1]: add({defs={0x080480e0}, expr=0x0a[5]}, {defs={0x080480e0}, expr=0x1f<-1>[5]}) = {defs={0x080480e0}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480e0[1]: equalToZero({defs={0x080480e0}, expr=0x09[5]}) = {defs={0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: shiftRight({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e0}, expr=0x0a[5]}) = {defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: unspecified_(1) = v8904[1]<unspec>
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8905[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(af, v8905[1]) = {defs={0x080480dd}, expr=v8843[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=false[1]}, {defs={0x080480dd}, expr=v8843[1]<unspec>}, v8904[1]<unspec>) = {defs={0x080480e0}, expr=v8904[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(af, {defs={0x080480e0}, expr=v8904[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e0[1]: add({defs={0x080480e0}, expr=0x0a[5]}, {defs={0x080480e0}, expr=0x1f<-1>[5]}) = {defs={0x080480e0}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480e0[1]: shiftRight({defs={0x080480dd}, expr=(concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e0}, expr=0x09[5]}) = {defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[19] (extract[13] 0x00000013[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[19] (extract[13] 0x00000013[32] 0x00000020[32] eax_0[32]))}, 0, 1) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: unspecified_(1) = v8911[1]<unspec>
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=false[1]}, v8911[1]<unspec>, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8912[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(cf, v8912[1]) = {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=false[1]}, {defs={0x080480dd}, expr=(extract[1] 0x00000009[32] 0x0000000a[32] eax_0[32])}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(cf, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])})
Symbolic@0x1320270 insn@0x080480e0[1]: unspecified_(1) = v8915[1]<unspec>
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8916[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(of, v8916[1]) = {defs={0x080480dd}, expr=v8853[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=false[1]}, {defs={0x080480dd}, expr=v8853[1]<unspec>}, v8915[1]<unspec>) = {defs={0x080480e0}, expr=v8915[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=false[1]}, {defs={0x080480dd,0x080480e0}, expr=false[1]}, {defs={0x080480e0}, expr=v8915[1]<unspec>}) = {defs={0x080480e0}, expr=v8915[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(of, {defs={0x080480e0}, expr=v8915[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e0[1]: invert({defs={0x080480e0}, expr=false[1]}) = {defs={0x080480e0}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, 0, 8) = {defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8922[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(pf, v8922[1]) = {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 1, 2) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000015[32] 0x00000016[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 0, 1) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000014[32] 0x00000015[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000014[32] 0x00000015[32] eax_0[32])}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000015[32] 0x00000016[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 3, 4) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000017[32] 0x00000018[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 2, 3) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000016[32] 0x00000017[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000016[32] 0x00000017[32] eax_0[32])}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000017[32] 0x00000018[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 5, 6) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 4, 5) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000018[32] 0x00000019[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000018[32] 0x00000019[32] eax_0[32])}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 7, 8) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: extract({defs={0x080480dd,0x080480e0}, expr=(extract[8] 0x00000014[32] 0x0000001c[32] eax_0[32])}, 6, 7) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32])}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]))}, {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]))}, {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: xor_({defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]))}, {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e0[1]: invert({defs={0x080480dd,0x080480e0}, expr=(bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=true[1]}, {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}, {defs={0x080480dd}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000000a[32] 0x0000000b[32] eax_0[32]) (extract[1] 0x0000000b[32] 0x0000000c[32] eax_0[32]) (extract[1] 0x0000000c[32] 0x0000000d[32] eax_0[32]) (extract[1] 0x0000000d[32] 0x0000000e[32] eax_0[32]) (extract[1] 0x0000000e[32] 0x0000000f[32] eax_0[32]) (extract[1] 0x0000000f[32] 0x00000010[32] eax_0[32]) (extract[1] 0x00000010[32] 0x00000011[32] eax_0[32]) (extract[1] 0x00000011[32] 0x00000012[32] eax_0[32])))}) = {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(pf, {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))})
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8941[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(sf, v8941[1]) = {defs={0x080480dd}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=true[1]}, {defs={0x080480dd,0x080480e0}, expr=false[1]}, {defs={0x080480dd}, expr=false[1]}) = {defs={0x080480dd,0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(sf, {defs={0x080480dd,0x080480e0}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480e0[1]: undefined_(1) = v8944[1]
Symbolic@0x1320270 insn@0x080480e0[1]: peekRegister(zf, v8944[1]) = {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: equalToZero({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: ite({defs={0x080480e0}, expr=true[1]}, {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}, {defs={0x080480dd}, expr=(zerop[1] (concat[32] 0x000[10] (extract[22] 0x0000000a[32] 0x00000020[32] eax_0[32])))}) = {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(zf, {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))})
Symbolic@0x1320270 insn@0x080480e0[1]: writeRegister(eax, {defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))})
Symbolic@0x1320270 insn@0x080480e0[1]: finishInstruction(shr    eax, 0x0a)
registers:
  eax          [writer=0x080480e0] read-before-write = {defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}
  eip          [writer=0x080480e0] write-only = {defs={0x080480e0}, expr=0x080480e3<134512867>[32]}
  cf           [writer=0x080480e0] write-only = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}
  pf           [writer=0x080480e0] write-only = {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}
  af           [writer=0x080480e0] write-only = {defs={0x080480e0}, expr=v8904[1]<unspec>}
  zf           [writer=0x080480e0] write-only = {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}
  sf           [writer=0x080480e0] write-only = {defs={0x080480dd,0x080480e0}, expr=false[1]}
  of           [writer=0x080480e0] write-only = {defs={0x080480e0}, expr=v8915[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080480e3: shr    eax, 0x0a
Symbolic@0x1320270: startInstruction(0x080480e3: shr    eax, 0x0a)
Symbolic@0x1320270 insn@0x080480e3[2]: number_(32, 134512867) = {defs={0x080480e3}, expr=0x080480e3<134512867>[32]}
Symbolic@0x1320270 insn@0x080480e3[2]: number_(32, 3) = {defs={0x080480e3}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480e3[2]: add({defs={0x080480e3}, expr=0x080480e3<134512867>[32]}, {defs={0x080480e3}, expr=0x00000003[32]}) = {defs={0x080480e3}, expr=0x080480e6<134512870>[32]}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(eip, {defs={0x080480e3}, expr=0x080480e6<134512870>[32]})
Symbolic@0x1320270 insn@0x080480e3[2]: number_(8, 10) = {defs={0x080480e3}, expr=0x0a[8]}
Symbolic@0x1320270 insn@0x080480e3[2]: unspecified_(32) = v8953[32]<unspec>
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(32) = v8954[32]
Symbolic@0x1320270 insn@0x080480e3[2]: readRegister(eax, v8954[32]) = {defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480e3}, expr=0x0a[8]}, 0, 5) = {defs={0x080480e3}, expr=0x0a[5]}
Symbolic@0x1320270 insn@0x080480e3[2]: equalToZero({defs={0x080480e3}, expr=0x0a[5]}) = {defs={0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480e3}, expr=0x0a[8]}, 5, 8) = {defs={0x080480e3}, expr=0x0[3]}
Symbolic@0x1320270 insn@0x080480e3[2]: equalToZero({defs={0x080480e3}, expr=0x0[3]}) = {defs={0x080480e3}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: invert({defs={0x080480e3}, expr=true[1]}) = {defs={0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: number_(5, 31) = {defs={0x080480e3}, expr=0x1f<-1>[5]}
Symbolic@0x1320270 insn@0x080480e3[2]: add({defs={0x080480e3}, expr=0x0a[5]}, {defs={0x080480e3}, expr=0x1f<-1>[5]}) = {defs={0x080480e3}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480e3[2]: equalToZero({defs={0x080480e3}, expr=0x09[5]}) = {defs={0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: shiftRight({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e3}, expr=0x0a[5]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: unspecified_(1) = v8966[1]<unspec>
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v8967[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(af, v8967[1]) = {defs={0x080480e0}, expr=v8904[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=false[1]}, {defs={0x080480e0}, expr=v8904[1]<unspec>}, v8966[1]<unspec>) = {defs={0x080480e3}, expr=v8966[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(af, {defs={0x080480e3}, expr=v8966[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e3[2]: add({defs={0x080480e3}, expr=0x0a[5]}, {defs={0x080480e3}, expr=0x1f<-1>[5]}) = {defs={0x080480e3}, expr=0x09[5]}
Symbolic@0x1320270 insn@0x080480e3[2]: shiftRight({defs={0x080480dd,0x080480e0}, expr=(concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e3}, expr=0x09[5]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[29] (extract[3] 0x0000001d[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[29] (extract[3] 0x0000001d[32] 0x00000020[32] eax_0[32]))}, 0, 1) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: unspecified_(1) = v8973[1]<unspec>
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=false[1]}, v8973[1]<unspec>, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v8974[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(cf, v8974[1]) = {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0}, expr=(extract[1] 0x00000013[32] 0x00000014[32] eax_0[32])}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(cf, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])})
Symbolic@0x1320270 insn@0x080480e3[2]: unspecified_(1) = v8977[1]<unspec>
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v8978[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(of, v8978[1]) = {defs={0x080480e0}, expr=v8915[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=false[1]}, {defs={0x080480e0}, expr=v8915[1]<unspec>}, v8977[1]<unspec>) = {defs={0x080480e3}, expr=v8977[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480e3}, expr=v8977[1]<unspec>}) = {defs={0x080480e3}, expr=v8977[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(of, {defs={0x080480e3}, expr=v8977[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e3[2]: invert({defs={0x080480e3}, expr=false[1]}) = {defs={0x080480e3}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 0, 8) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v8984[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(pf, v8984[1]) = {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 1, 2) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 0, 1) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32])}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 3, 4) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 2, 3) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 5, 6) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 4, 5) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 7, 8) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[8] 0x00[6] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 6, 7) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1])}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: xor_({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1])}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1])}
Symbolic@0x1320270 insn@0x080480e3[2]: invert({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1])}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}, {defs={0x080480dd,0x080480e0}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000014[32] 0x00000015[32] eax_0[32]) (extract[1] 0x00000015[32] 0x00000016[32] eax_0[32]) (extract[1] 0x00000016[32] 0x00000017[32] eax_0[32]) (extract[1] 0x00000017[32] 0x00000018[32] eax_0[32]) (extract[1] 0x00000018[32] 0x00000019[32] eax_0[32]) (extract[1] 0x00000019[32] 0x0000001a[32] eax_0[32]) (extract[1] 0x0000001a[32] 0x0000001b[32] eax_0[32]) (extract[1] 0x0000001b[32] 0x0000001c[32] eax_0[32])))}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(pf, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))})
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v8999[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(sf, v8999[1]) = {defs={0x080480dd,0x080480e0}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}, {defs={0x080480dd,0x080480e0}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(sf, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480e3[2]: undefined_(1) = v9002[1]
Symbolic@0x1320270 insn@0x080480e3[2]: peekRegister(zf, v9002[1]) = {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e3[2]: equalToZero({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e3[2]: ite({defs={0x080480e3}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}, {defs={0x080480dd,0x080480e0}, expr=(zerop[1] (concat[32] 0x00000[20] (extract[12] 0x00000014[32] 0x00000020[32] eax_0[32])))}) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(zf, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))})
Symbolic@0x1320270 insn@0x080480e3[2]: writeRegister(eax, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))})
Symbolic@0x1320270 insn@0x080480e3[2]: finishInstruction(shr    eax, 0x0a)
registers:
  eax          [writer=0x080480e3] read-before-write = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}
  eip          [writer=0x080480e3] write-only = {defs={0x080480e3}, expr=0x080480e6<134512870>[32]}
  cf           [writer=0x080480e3] write-only = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}
  pf           [writer=0x080480e3] write-only = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}
  af           [writer=0x080480e3] write-only = {defs={0x080480e3}, expr=v8966[1]<unspec>}
  zf           [writer=0x080480e3] write-only = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}
  sf           [writer=0x080480e3] write-only = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
  of           [writer=0x080480e3] write-only = {defs={0x080480e3}, expr=v8977[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080480e6: shr    eax, 0x02
Symbolic@0x1320270: startInstruction(0x080480e6: shr    eax, 0x02)
Symbolic@0x1320270 insn@0x080480e6[3]: number_(32, 134512870) = {defs={0x080480e6}, expr=0x080480e6<134512870>[32]}
Symbolic@0x1320270 insn@0x080480e6[3]: number_(32, 3) = {defs={0x080480e6}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480e6[3]: add({defs={0x080480e6}, expr=0x080480e6<134512870>[32]}, {defs={0x080480e6}, expr=0x00000003[32]}) = {defs={0x080480e6}, expr=0x080480e9<134512873>[32]}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(eip, {defs={0x080480e6}, expr=0x080480e9<134512873>[32]})
Symbolic@0x1320270 insn@0x080480e6[3]: number_(8, 2) = {defs={0x080480e6}, expr=0x02[8]}
Symbolic@0x1320270 insn@0x080480e6[3]: unspecified_(32) = v9011[32]<unspec>
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(32) = v9012[32]
Symbolic@0x1320270 insn@0x080480e6[3]: readRegister(eax, v9012[32]) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480e6}, expr=0x02[8]}, 0, 5) = {defs={0x080480e6}, expr=0x02[5]}
Symbolic@0x1320270 insn@0x080480e6[3]: equalToZero({defs={0x080480e6}, expr=0x02[5]}) = {defs={0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480e6}, expr=0x02[8]}, 5, 8) = {defs={0x080480e6}, expr=0x0[3]}
Symbolic@0x1320270 insn@0x080480e6[3]: equalToZero({defs={0x080480e6}, expr=0x0[3]}) = {defs={0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: invert({defs={0x080480e6}, expr=true[1]}) = {defs={0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: number_(5, 31) = {defs={0x080480e6}, expr=0x1f<-1>[5]}
Symbolic@0x1320270 insn@0x080480e6[3]: add({defs={0x080480e6}, expr=0x02[5]}, {defs={0x080480e6}, expr=0x1f<-1>[5]}) = {defs={0x080480e6}, expr=0x01[5]}
Symbolic@0x1320270 insn@0x080480e6[3]: equalToZero({defs={0x080480e6}, expr=0x01[5]}) = {defs={0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: shiftRight({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e6}, expr=0x02[5]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: unspecified_(1) = v9024[1]<unspec>
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9025[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(af, v9025[1]) = {defs={0x080480e3}, expr=v8966[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=false[1]}, {defs={0x080480e3}, expr=v8966[1]<unspec>}, v9024[1]<unspec>) = {defs={0x080480e6}, expr=v9024[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(af, {defs={0x080480e6}, expr=v9024[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e6[3]: add({defs={0x080480e6}, expr=0x02[5]}, {defs={0x080480e6}, expr=0x1f<-1>[5]}) = {defs={0x080480e6}, expr=0x01[5]}
Symbolic@0x1320270 insn@0x080480e6[3]: shiftRight({defs={0x080480dd,0x080480e0,0x080480e3}, expr=(concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32]))}, {defs={0x080480e6}, expr=0x01[5]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(concat[32] 0x00000000[31] (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]))}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(concat[32] 0x00000000[31] (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]))}, 0, 1) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e6[3]: unspecified_(1) = v9031[1]<unspec>
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=false[1]}, v9031[1]<unspec>, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9032[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(cf, v9032[1]) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(extract[1] 0x0000001d[32] 0x0000001e[32] eax_0[32])}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(cf, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])})
Symbolic@0x1320270 insn@0x080480e6[3]: unspecified_(1) = v9035[1]<unspec>
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9036[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(of, v9036[1]) = {defs={0x080480e3}, expr=v8977[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=false[1]}, {defs={0x080480e3}, expr=v8977[1]<unspec>}, v9035[1]<unspec>) = {defs={0x080480e6}, expr=v9035[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480e6}, expr=v9035[1]<unspec>}) = {defs={0x080480e6}, expr=v9035[1]<unspec>}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(of, {defs={0x080480e6}, expr=v9035[1]<unspec>})
Symbolic@0x1320270 insn@0x080480e6[3]: invert({defs={0x080480e6}, expr=false[1]}) = {defs={0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}, 0, 8) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}, 31, 32) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9042[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(pf, v9042[1]) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 1, 2) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 0, 1) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 3, 4) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 2, 3) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 5, 6) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 4, 5) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 7, 8) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: extract({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00[8]}, 6, 7) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: xor_({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: invert({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(invert[1] (bv-xor[1] (extract[1] 0x0000001e[32] 0x0000001f[32] eax_0[32]) (extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32]) false[1]))}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(pf, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9054[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(sf, v9054[1]) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=false[1]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(sf, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480e6[3]: undefined_(1) = v9057[1]
Symbolic@0x1320270 insn@0x080480e6[3]: peekRegister(zf, v9057[1]) = {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}
Symbolic@0x1320270 insn@0x080480e6[3]: equalToZero({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: ite({defs={0x080480e6}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}, {defs={0x080480dd,0x080480e0,0x080480e3}, expr=(zerop[1] (concat[32] 0x00000000[30] (extract[2] 0x0000001e[32] 0x00000020[32] eax_0[32])))}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(zf, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480e6[3]: writeRegister(eax, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]})
Symbolic@0x1320270 insn@0x080480e6[3]: finishInstruction(shr    eax, 0x02)
registers:
  eax          [writer=0x080480e6] read-before-write = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=0x00000000[32]}
  eip          [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=0x080480e9<134512873>[32]}
  cf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
  pf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  af           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9024[1]<unspec>}
  zf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  sf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
  of           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9035[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080480e9: mov    eax, ebx
Symbolic@0x1320270: startInstruction(0x080480e9: mov    eax, ebx)
Symbolic@0x1320270 insn@0x080480e9[4]: number_(32, 134512873) = {defs={0x080480e9}, expr=0x080480e9<134512873>[32]}
Symbolic@0x1320270 insn@0x080480e9[4]: number_(32, 2) = {defs={0x080480e9}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480e9[4]: add({defs={0x080480e9}, expr=0x080480e9<134512873>[32]}, {defs={0x080480e9}, expr=0x00000002[32]}) = {defs={0x080480e9}, expr=0x080480eb<134512875>[32]}
Symbolic@0x1320270 insn@0x080480e9[4]: writeRegister(eip, {defs={0x080480e9}, expr=0x080480eb<134512875>[32]})
Symbolic@0x1320270 insn@0x080480e9[4]: undefined_(32) = v9066[32]
Symbolic@0x1320270 insn@0x080480e9[4]: readRegister(ebx, v9066[32]) = ebx_0[32]
Symbolic@0x1320270 insn@0x080480e9[4]: writeRegister(eax, ebx_0[32])
Symbolic@0x1320270 insn@0x080480e9[4]: finishInstruction(mov    eax, ebx)
registers:
  eax          [writer=0x080480e9] read-before-write = ebx_0[32]
  eip          [writer=0x080480e9] write-only = {defs={0x080480e9}, expr=0x080480eb<134512875>[32]}
  cf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
  pf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  af           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9024[1]<unspec>}
  zf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  sf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
  of           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9035[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:

0x080480eb: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480eb: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480eb[5]: number_(32, 134512875) = {defs={0x080480eb}, expr=0x080480eb<134512875>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: number_(32, 2) = {defs={0x080480eb}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: add({defs={0x080480eb}, expr=0x080480eb<134512875>[32]}, {defs={0x080480eb}, expr=0x00000002[32]}) = {defs={0x080480eb}, expr=0x080480ed<134512877>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: writeRegister(eip, {defs={0x080480eb}, expr=0x080480ed<134512877>[32]})
Symbolic@0x1320270 insn@0x080480eb[5]: undefined_(1) = v9072[1]
Symbolic@0x1320270 insn@0x080480eb[5]: readRegister(zf, v9072[1]) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480eb[5]: undefined_(32) = v9074[32]
Symbolic@0x1320270 insn@0x080480eb[5]: readRegister(eip, v9074[32]) = {defs={0x080480eb}, expr=0x080480ed<134512877>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: number_(32, 134512802) = {defs={0x080480eb}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: unsignedExtend({defs={0x080480eb}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480eb}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: ite({defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}, {defs={0x080480eb}, expr=0x080480a2<134512802>[32]}, {defs={0x080480eb}, expr=0x080480ed<134512877>[32]}) = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6,0x080480eb}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480eb[5]: writeRegister(eip, {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6,0x080480eb}, expr=0x080480a2<134512802>[32]})
Symbolic@0x1320270 insn@0x080480eb[5]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480e9] read-before-write = ebx_0[32]
  eip          [writer=0x080480eb] = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6,0x080480eb}, expr=0x080480a2<134512802>[32]}
  cf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] eax_0[32])}
  pf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  af           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9024[1]<unspec>}
  zf           [writer=0x080480e6] = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=true[1]}
  sf           [writer=0x080480e6] write-only = {defs={0x080480dd,0x080480e0,0x080480e3,0x080480e6}, expr=false[1]}
  of           [writer=0x080480e6] write-only = {defs={0x080480e6}, expr=v9035[1]<unspec>}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480ed: mov    eax, 0x00000001
Symbolic@0x1320270: startInstruction(0x080480ed: mov    eax, 0x00000001)
Symbolic@0x1320270 insn@0x080480ed[0]: number_(32, 134512877) = {defs={0x080480ed}, expr=0x080480ed<134512877>[32]}
Symbolic@0x1320270 insn@0x080480ed[0]: number_(32, 5) = {defs={0x080480ed}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480ed[0]: add({defs={0x080480ed}, expr=0x080480ed<134512877>[32]}, {defs={0x080480ed}, expr=0x00000005[32]}) = {defs={0x080480ed}, expr=0x080480f2<134512882>[32]}
Symbolic@0x1320270 insn@0x080480ed[0]: writeRegister(eip, {defs={0x080480ed}, expr=0x080480f2<134512882>[32]})
Symbolic@0x1320270 insn@0x080480ed[0]: number_(32, 1) = {defs={0x080480ed}, expr=0x00000001[32]}
Symbolic@0x1320270 insn@0x080480ed[0]: writeRegister(eax, {defs={0x080480ed}, expr=0x00000001[32]})
Symbolic@0x1320270 insn@0x080480ed[0]: finishInstruction(mov    eax, 0x00000001)
registers:
  eax          [writer=0x080480ed] write-only = {defs={0x080480ed}, expr=0x00000001[32]}
  eip          [writer=0x080480ed] write-only = {defs={0x080480ed}, expr=0x080480f2<134512882>[32]}
  fpstatus_top = 0x0[3]
memory:

0x080480f2: xor    eax, eax
Symbolic@0x1320270: startInstruction(0x080480f2: xor    eax, eax)
Symbolic@0x1320270 insn@0x080480f2[1]: number_(32, 134512882) = {defs={0x080480f2}, expr=0x080480f2<134512882>[32]}
Symbolic@0x1320270 insn@0x080480f2[1]: number_(32, 2) = {defs={0x080480f2}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480f2[1]: add({defs={0x080480f2}, expr=0x080480f2<134512882>[32]}, {defs={0x080480f2}, expr=0x00000002[32]}) = {defs={0x080480f2}, expr=0x080480f4<134512884>[32]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(eip, {defs={0x080480f2}, expr=0x080480f4<134512884>[32]})
Symbolic@0x1320270 insn@0x080480f2[1]: number_(32, 0) = {defs={0x080480f2}, expr=0x00000000[32]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00000000[32]}, 0, 8) = {defs={0x080480f2}, expr=0x00[8]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 1, 2) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 0, 1) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 3, 4) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 2, 3) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 5, 6) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 4, 5) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 7, 8) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00[8]}, 6, 7) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: xor_({defs={0x080480f2}, expr=false[1]}, {defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: invert({defs={0x080480f2}, expr=false[1]}) = {defs={0x080480f2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(pf, {defs={0x080480f2}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480f2[1]: extract({defs={0x080480f2}, expr=0x00000000[32]}, 31, 32) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(sf, {defs={0x080480f2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480f2[1]: equalToZero({defs={0x080480f2}, expr=0x00000000[32]}) = {defs={0x080480f2}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(zf, {defs={0x080480f2}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(eax, {defs={0x080480f2}, expr=0x00000000[32]})
Symbolic@0x1320270 insn@0x080480f2[1]: boolean_(0) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(of, {defs={0x080480f2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480f2[1]: unspecified_(1) = v9583[1]<unspec>
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(af, v9583[1]<unspec>)
Symbolic@0x1320270 insn@0x080480f2[1]: boolean_(0) = {defs={0x080480f2}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f2[1]: writeRegister(cf, {defs={0x080480f2}, expr=false[1]})
Symbolic@0x1320270 insn@0x080480f2[1]: finishInstruction(xor    eax, eax)
registers:
  eax          [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=0x00000000[32]}
  eip          [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=0x080480f4<134512884>[32]}
  cf           [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=false[1]}
  pf           [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=true[1]}
  af           [writer=0x080480f2] write-only = v9583[1]<unspec>
  zf           [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=true[1]}
  sf           [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=false[1]}
  of           [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=false[1]}
  fpstatus_top = 0x0[3]
memory:

0x080480f4: neg    ecx
Symbolic@0x1320270: startInstruction(0x080480f4: neg    ecx)
Symbolic@0x1320270 insn@0x080480f4[2]: number_(32, 134512884) = {defs={0x080480f4}, expr=0x080480f4<134512884>[32]}
Symbolic@0x1320270 insn@0x080480f4[2]: number_(32, 2) = {defs={0x080480f4}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480f4[2]: add({defs={0x080480f4}, expr=0x080480f4<134512884>[32]}, {defs={0x080480f4}, expr=0x00000002[32]}) = {defs={0x080480f4}, expr=0x080480f6<134512886>[32]}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(eip, {defs={0x080480f4}, expr=0x080480f6<134512886>[32]})
Symbolic@0x1320270 insn@0x080480f4[2]: undefined_(32) = v9588[32]
Symbolic@0x1320270 insn@0x080480f4[2]: readRegister(ecx, v9588[32]) = ecx_0[32]
Symbolic@0x1320270 insn@0x080480f4[2]: boolean_(0) = {defs={0x080480f4}, expr=false[1]}
Symbolic@0x1320270 insn@0x080480f4[2]: invert(ecx_0[32]) = {defs={0x080480f4}, expr=(invert[32] ecx_0[32])}
Symbolic@0x1320270 insn@0x080480f4[2]: number_(32, 0) = {defs={0x080480f4}, expr=0x00000000[32]}
Symbolic@0x1320270 insn@0x080480f4[2]: invert({defs={0x080480f4}, expr=false[1]}) = {defs={0x080480f4}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480f4[2]: addWithCarries({defs={0x080480f4}, expr=0x00000000[32]}, {defs={0x080480f4}, expr=(invert[32] ecx_0[32])}, {defs={0x080480f4}, expr=true[1]}) = {defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
Symbolic@0x1320270 insn@0x080480f4[2]: also returns: {defs={0x080480f4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}, 0, 8) = {defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 1, 2) = {defs={0x080480f4}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 0, 1) = {defs={0x080480f4}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480f4}, expr=(extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 3, 4) = {defs={0x080480f4}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 2, 3) = {defs={0x080480f4}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480f4}, expr=(extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 5, 6) = {defs={0x080480f4}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 4, 5) = {defs={0x080480f4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480f4}, expr=(extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 7, 8) = {defs={0x080480f4}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[8] 0x00000000[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, 6, 7) = {defs={0x080480f4}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480f4}, expr=(extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}, {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}
Symbolic@0x1320270 insn@0x080480f4[2]: invert({defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])))}) = {defs={0x080480f4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(pf, {defs={0x080480f4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))})
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}, 31, 32) = {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(sf, {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))})
Symbolic@0x1320270 insn@0x080480f4[2]: equalToZero({defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}) = {defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(zf, {defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))})
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 31, 32) = {defs={0x080480f4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 30, 31) = {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480f4[2]: extract({defs={0x080480f4}, expr=(extract[32] 0x00000001[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, 3, 4) = {defs={0x080480f4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}
Symbolic@0x1320270 insn@0x080480f4[2]: invert({defs={0x080480f4}, expr=(extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(af, {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480f4[2]: invert({defs={0x080480f4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(cf, {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480f4[2]: xor_({defs={0x080480f4}, expr=(extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}, {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33]))}) = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(of, {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))})
Symbolic@0x1320270 insn@0x080480f4[2]: writeRegister(ecx, {defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])})
Symbolic@0x1320270 insn@0x080480f4[2]: finishInstruction(neg    ecx)
registers:
  eax          [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=0x00000000[32]}
  ecx          [writer=0x080480f4] read-before-write = {defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
  eip          [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=0x080480f6<134512886>[32]}
  cf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  pf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
  af           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  zf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  sf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  of           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:

0x080480f6: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x080480f6: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x080480f6[3]: number_(32, 134512886) = {defs={0x080480f6}, expr=0x080480f6<134512886>[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: number_(32, 2) = {defs={0x080480f6}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: add({defs={0x080480f6}, expr=0x080480f6<134512886>[32]}, {defs={0x080480f6}, expr=0x00000002[32]}) = {defs={0x080480f6}, expr=0x080480f8<134512888>[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: writeRegister(eip, {defs={0x080480f6}, expr=0x080480f8<134512888>[32]})
Symbolic@0x1320270 insn@0x080480f6[3]: undefined_(1) = v9638[1]
Symbolic@0x1320270 insn@0x080480f6[3]: readRegister(zf, v9638[1]) = {defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
Symbolic@0x1320270 insn@0x080480f6[3]: undefined_(32) = v9640[32]
Symbolic@0x1320270 insn@0x080480f6[3]: readRegister(eip, v9640[32]) = {defs={0x080480f6}, expr=0x080480f8<134512888>[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: number_(32, 134512802) = {defs={0x080480f6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: unsignedExtend({defs={0x080480f6}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x080480f6}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x080480f6[3]: ite({defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}, {defs={0x080480f6}, expr=0x080480a2<134512802>[32]}, {defs={0x080480f6}, expr=0x080480f8<134512888>[32]}) = {defs={0x080480f4,0x080480f6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480f8<134512888>[32])}
Symbolic@0x1320270 insn@0x080480f6[3]: writeRegister(eip, {defs={0x080480f4,0x080480f6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480f8<134512888>[32])})
Symbolic@0x1320270 insn@0x080480f6[3]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480f2] write-only = {defs={0x080480f2}, expr=0x00000000[32]}
  ecx          [writer=0x080480f4] read-before-write = {defs={0x080480f4}, expr=(add[32] (invert[32] ecx_0[32]) 0x00000001[32])}
  eip          [writer=0x080480f6] = {defs={0x080480f4,0x080480f6}, expr=(ite[32] (zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) 0x080480a2<134512802>[32] 0x080480f8<134512888>[32])}
  cf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  pf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (bv-xor[1] (extract[1] 0x00000000[32] 0x00000001[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000001[32] 0x00000002[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000002[32] 0x00000003[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000003[32] 0x00000004[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000004[32] 0x00000005[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000005[32] 0x00000006[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000006[32] 0x00000007[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32])) (extract[1] 0x00000007[32] 0x00000008[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))))}
  af           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(invert[1] (extract[1] 0x00000004[32] 0x00000005[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  zf           [writer=0x080480f4] = {defs={0x080480f4}, expr=(zerop[1] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  sf           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(extract[1] 0x0000001f[32] 0x00000020[32] (add[32] (invert[32] ecx_0[32]) 0x00000001[32]))}
  of           [writer=0x080480f4] write-only = {defs={0x080480f4}, expr=(bv-xor[1] (extract[1] 0x0000001f[32] 0x00000020[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])) (extract[1] 0x00000020[32] 0x00000021[32] (bv-xor[33] (add[33] (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000001[33]) (uextend[33] 0x00000021[32] (invert[32] ecx_0[32])) 0x000000000[33])))}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x080480f8: push   0x00000003
Symbolic@0x1320270: startInstruction(0x080480f8: push   0x00000003)
Symbolic@0x1320270 insn@0x080480f8[0]: number_(32, 134512888) = {defs={0x080480f8}, expr=0x080480f8<134512888>[32]}
Symbolic@0x1320270 insn@0x080480f8[0]: number_(32, 5) = {defs={0x080480f8}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480f8[0]: add({defs={0x080480f8}, expr=0x080480f8<134512888>[32]}, {defs={0x080480f8}, expr=0x00000005[32]}) = {defs={0x080480f8}, expr=0x080480fd<134512893>[32]}
Symbolic@0x1320270 insn@0x080480f8[0]: writeRegister(eip, {defs={0x080480f8}, expr=0x080480fd<134512893>[32]})
Symbolic@0x1320270 insn@0x080480f8[0]: number_(32, 3) = {defs={0x080480f8}, expr=0x00000003[32]}
Symbolic@0x1320270 insn@0x080480f8[0]: undefined_(32) = v10133[32]
Symbolic@0x1320270 insn@0x080480f8[0]: readRegister(esp, v10133[32]) = esp_0[32]
Symbolic@0x1320270 insn@0x080480f8[0]: number_(32, 18446744073709551612) = {defs={0x080480f8}, expr=0xfffffffc<4294967292,-4>[32]}
Symbolic@0x1320270 insn@0x080480f8[0]: add(esp_0[32], {defs={0x080480f8}, expr=0xfffffffc<4294967292,-4>[32]}) = {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
Symbolic@0x1320270 insn@0x080480f8[0]: writeRegister(esp, {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])})
Symbolic@0x1320270 insn@0x080480f8[0]: boolean_(1) = {defs={0x080480f8}, expr=true[1]}
Symbolic@0x1320270 insn@0x080480f8[0]: writeMemory(ss, {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}, {defs={0x080480f8}, expr=0x00000003[32]}, {defs={0x080480f8}, expr=true[1]})
Symbolic@0x1320270 insn@0x080480f8[0]: finishInstruction(push   0x00000003)
registers:
  esp          [writer=0x080480f8] read-before-write = {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080480f8] write-only = {defs={0x080480f8}, expr=0x080480fd<134512893>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x03[8]}

0x080480fd: mov    eax, 0x00000007
Symbolic@0x1320270: startInstruction(0x080480fd: mov    eax, 0x00000007)
Symbolic@0x1320270 insn@0x080480fd[1]: number_(32, 134512893) = {defs={0x080480fd}, expr=0x080480fd<134512893>[32]}
Symbolic@0x1320270 insn@0x080480fd[1]: number_(32, 5) = {defs={0x080480fd}, expr=0x00000005[32]}
Symbolic@0x1320270 insn@0x080480fd[1]: add({defs={0x080480fd}, expr=0x080480fd<134512893>[32]}, {defs={0x080480fd}, expr=0x00000005[32]}) = {defs={0x080480fd}, expr=0x08048102<134512898>[32]}
Symbolic@0x1320270 insn@0x080480fd[1]: writeRegister(eip, {defs={0x080480fd}, expr=0x08048102<134512898>[32]})
Symbolic@0x1320270 insn@0x080480fd[1]: number_(32, 7) = {defs={0x080480fd}, expr=0x00000007[32]}
Symbolic@0x1320270 insn@0x080480fd[1]: writeRegister(eax, {defs={0x080480fd}, expr=0x00000007[32]})
Symbolic@0x1320270 insn@0x080480fd[1]: finishInstruction(mov    eax, 0x00000007)
registers:
  eax          [writer=0x080480fd] write-only = {defs={0x080480fd}, expr=0x00000007[32]}
  esp          [writer=0x080480f8] read-before-write = {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
  eip          [writer=0x080480fd] write-only = {defs={0x080480fd}, expr=0x08048102<134512898>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x03[8]}

0x08048102: push   eax
Symbolic@0x1320270: startInstruction(0x08048102: push   eax)
Symbolic@0x1320270 insn@0x08048102[2]: number_(32, 134512898) = {defs={0x08048102}, expr=0x08048102<134512898>[32]}
Symbolic@0x1320270 insn@0x08048102[2]: number_(32, 1) = {defs={0x08048102}, expr=0x00000001[32]}
Symbolic@0x1320270 insn@0x08048102[2]: add({defs={0x08048102}, expr=0x08048102<134512898>[32]}, {defs={0x08048102}, expr=0x00000001[32]}) = {defs={0x08048102}, expr=0x08048103<134512899>[32]}
Symbolic@0x1320270 insn@0x08048102[2]: writeRegister(eip, {defs={0x08048102}, expr=0x08048103<134512899>[32]})
Symbolic@0x1320270 insn@0x08048102[2]: undefined_(32) = v10152[32]
Symbolic@0x1320270 insn@0x08048102[2]: readRegister(eax, v10152[32]) = {defs={0x080480fd}, expr=0x00000007[32]}
Symbolic@0x1320270 insn@0x08048102[2]: undefined_(32) = v10154[32]
Symbolic@0x1320270 insn@0x08048102[2]: readRegister(esp, v10154[32]) = {defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}
Symbolic@0x1320270 insn@0x08048102[2]: number_(32, 18446744073709551612) = {defs={0x08048102}, expr=0xfffffffc<4294967292,-4>[32]}
Symbolic@0x1320270 insn@0x08048102[2]: add({defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])}, {defs={0x08048102}, expr=0xfffffffc<4294967292,-4>[32]}) = {defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
Symbolic@0x1320270 insn@0x08048102[2]: writeRegister(esp, {defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])})
Symbolic@0x1320270 insn@0x08048102[2]: boolean_(1) = {defs={0x08048102}, expr=true[1]}
Symbolic@0x1320270 insn@0x08048102[2]: writeMemory(ss, {defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}, {defs={0x080480fd}, expr=0x00000007[32]}, {defs={0x08048102}, expr=true[1]})
Symbolic@0x1320270 insn@0x08048102[2]: finishInstruction(push   eax)
registers:
  eax          [writer=0x080480fd] = {defs={0x080480fd}, expr=0x00000007[32]}
  esp          [writer=0x08048102] read-before-write = {defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  eip          [writer=0x08048102] write-only = {defs={0x08048102}, expr=0x08048103<134512899>[32]}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x07[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x03[8]}

0x08048103: je     0x080480a2<end>
Symbolic@0x1320270: startInstruction(0x08048103: je     0x080480a2<end>)
Symbolic@0x1320270 insn@0x08048103[3]: number_(32, 134512899) = {defs={0x08048103}, expr=0x08048103<134512899>[32]}
Symbolic@0x1320270 insn@0x08048103[3]: number_(32, 2) = {defs={0x08048103}, expr=0x00000002[32]}
Symbolic@0x1320270 insn@0x08048103[3]: add({defs={0x08048103}, expr=0x08048103<134512899>[32]}, {defs={0x08048103}, expr=0x00000002[32]}) = {defs={0x08048103}, expr=0x08048105<134512901>[32]}
Symbolic@0x1320270 insn@0x08048103[3]: writeRegister(eip, {defs={0x08048103}, expr=0x08048105<134512901>[32]})
Symbolic@0x1320270 insn@0x08048103[3]: undefined_(1) = v10170[1]
Symbolic@0x1320270 insn@0x08048103[3]: readRegister(zf, v10170[1]) = zf_0[1]
Symbolic@0x1320270 insn@0x08048103[3]: undefined_(32) = v10171[32]
Symbolic@0x1320270 insn@0x08048103[3]: readRegister(eip, v10171[32]) = {defs={0x08048103}, expr=0x08048105<134512901>[32]}
Symbolic@0x1320270 insn@0x08048103[3]: number_(32, 134512802) = {defs={0x08048103}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x08048103[3]: unsignedExtend({defs={0x08048103}, expr=0x080480a2<134512802>[32]}, 32) = {defs={0x08048103}, expr=0x080480a2<134512802>[32]}
Symbolic@0x1320270 insn@0x08048103[3]: ite(zf_0[1], {defs={0x08048103}, expr=0x080480a2<134512802>[32]}, {defs={0x08048103}, expr=0x08048105<134512901>[32]}) = {defs={0x08048103}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x08048105<134512901>[32])}
Symbolic@0x1320270 insn@0x08048103[3]: writeRegister(eip, {defs={0x08048103}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x08048105<134512901>[32])})
Symbolic@0x1320270 insn@0x08048103[3]: finishInstruction(je     0x080480a2<end>)
registers:
  eax          [writer=0x080480fd] = {defs={0x080480fd}, expr=0x00000007[32]}
  esp          [writer=0x08048102] read-before-write = {defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])}
  eip          [writer=0x08048103] = {defs={0x08048103}, expr=(ite[32] zf_0[1] 0x080480a2<134512802>[32] 0x08048105<134512901>[32])}
  fpstatus_top = 0x0[3]
memory:
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffffb<4294967291,-5>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffffa<4294967290,-6>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff9<4294967289,-7>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x00[8]}
  addr={defs={0x080480f8,0x08048102}, expr=(add[32] esp_0[32] 0xfffffff8<4294967288,-8>[32])} writer=0x08048102 write-only value={defs={0x080480fd}, expr=0x07[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xffffffff<4294967295,-1>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffe<4294967294,-2>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffd<4294967293,-3>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x00[8]}
  addr={defs={0x080480f8}, expr=(add[32] esp_0[32] 0xfffffffc<4294967292,-4>[32])} writer=0x080480f8 write-only value={defs={0x080480f8}, expr=0x03[8]}
Symbolic@0x1320270: operators destroyed
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================

0x08048105: hlt    
Symbolic@0x1320270: startInstruction(0x08048105: hlt)
Symbolic@0x1320270 insn@0x08048105[0]: number_(32, 134512901) = {defs={0x08048105}, expr=0x08048105<134512901>[32]}
Symbolic@0x1320270 insn@0x08048105[0]: number_(32, 1) = {defs={0x08048105}, expr=0x00000001[32]}
Symbolic@0x1320270 insn@0x08048105[0]: add({defs={0x08048105}, expr=0x08048105<134512901>[32]}, {defs={0x08048105}, expr=0x00000001[32]}) = {defs={0x08048105}, expr=0x08048106<134512902>[32]}
Symbolic@0x1320270 insn@0x08048105[0]: writeRegister(eip, {defs={0x08048105}, expr=0x08048106<134512902>[32]})
Symbolic@0x1320270 insn@0x08048105[0]: hlt()
Symbolic@0x1320270 insn@0x08048105[0]: number_(32, 134512901) = {defs={0x08048105}, expr=0x08048105<134512901>[32]}
Symbolic@0x1320270 insn@0x08048105[0]: writeRegister(eip, {defs={0x08048105}, expr=0x08048105<134512901>[32]})
Symbolic@0x1320270 insn@0x08048105[0]: finishInstruction(hlt)
registers:
  eip          [writer=0x08048105] write-only = {defs={0x08048105}, expr=0x08048105<134512901>[32]}
  fpstatus_top = 0x0[3]
memory:
Symbolic@0x1320270: operators destroyed
analyzed headers: 1
